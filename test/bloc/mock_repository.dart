// Mocks generated by Mockito 5.0.11 from annotations
// in submission_1/test/bloc/list_restaurant_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:submission_1/data/model/local/favorite_restaurants.dart' as _i7;
import 'package:submission_1/data/model/remote/detail/detail_restaurant_response.dart'
    as _i3;
import 'package:submission_1/data/model/remote/detail/restaurant.dart' as _i6;
import 'package:submission_1/data/model/remote/restaurant_response.dart' as _i2;
import 'package:submission_1/data/source/repository.dart' as _i4;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeRestaurantResponse extends _i1.Fake
    implements _i2.RestaurantResponse {}

class _FakeDetailResponse extends _i1.Fake implements _i3.DetailResponse {}

/// A class which mocks [Repository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRepository extends _i1.Mock implements _i4.Repository {
  MockRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> get isDailyReminder =>
      (super.noSuchMethod(Invocation.getter(#isDailyReminder),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
  @override
  _i5.Future<_i2.RestaurantResponse> getRestaurants() => (super.noSuchMethod(
          Invocation.method(#getRestaurants, []),
          returnValue:
              Future<_i2.RestaurantResponse>.value(_FakeRestaurantResponse()))
      as _i5.Future<_i2.RestaurantResponse>);
  @override
  _i5.Future<_i2.RestaurantResponse> searchRestaurants(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchRestaurants, [query]),
              returnValue: Future<_i2.RestaurantResponse>.value(
                  _FakeRestaurantResponse()))
          as _i5.Future<_i2.RestaurantResponse>);
  @override
  _i5.Future<_i3.DetailResponse> getDetailRestaurant(String? id) =>
      (super.noSuchMethod(Invocation.method(#getDetailRestaurants, [id]),
              returnValue:
                  Future<_i3.DetailResponse>.value(_FakeDetailResponse()))
          as _i5.Future<_i3.DetailResponse>);
  @override
  _i5.Future<dynamic> postReview(String? id, String? name, String? review) =>
      (super.noSuchMethod(Invocation.method(#postReview, [id, name, review]),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
  @override
  _i5.Future<void> insertFavorite(_i6.Restaurant? restaurant) =>
      (super.noSuchMethod(Invocation.method(#insertFavorite, [restaurant]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<List<_i7.FavoriteRestaurants>> getFavorites() =>
      (super.noSuchMethod(Invocation.method(#getFavorites, []),
              returnValue: Future<List<_i7.FavoriteRestaurants>>.value(
                  <_i7.FavoriteRestaurants>[]))
          as _i5.Future<List<_i7.FavoriteRestaurants>>);
  @override
  _i5.Future<Map<dynamic, dynamic>> getFavoriteById(String? id) =>
      (super.noSuchMethod(Invocation.method(#getFavoriteById, [id]),
              returnValue:
                  Future<Map<dynamic, dynamic>>.value(<dynamic, dynamic>{}))
          as _i5.Future<Map<dynamic, dynamic>>);
  @override
  _i5.Future<void> removeFavorite(String? id) =>
      (super.noSuchMethod(Invocation.method(#removeFavorite, [id]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  void setDailyReminder(bool? value) =>
      super.noSuchMethod(Invocation.method(#setDailyReminder, [value]),
          returnValueForMissingStub: null);
  @override
  void configureSelectNotificationSubject(String? route, int? index) =>
      super.noSuchMethod(
          Invocation.method(
              #configureSelectNotificationSubject, [route, index]),
          returnValueForMissingStub: null);
}
